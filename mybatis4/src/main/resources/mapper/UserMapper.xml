<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace 命名空间，用于隔离sql
	还一个很重要的作用，使用动态代理开发dao，namespace必须和Mapper接口类路径一致
 -->
<mapper namespace="com.li.mybatis4.mapper.UserMapper">
	<!--使用包装类型查询用户-->
	<select id="queryUserByQueryVo" parameterType="queryVo" resultType="user" >
		select * from user where username like '%${user.username}%'
	</select>

	<!--查询用户数据条数-->
	<select id="queryUserCount" resultType="int" >
		select count(*) from user
	</select>


	<!--动态sql-->
	<!--根据条件查询用户信息-->
	<select id="queryUserByWhere" resultType="user" parameterType="user">
		select * from user where sex = #{sex} and username like '%${username}%'
	</select>
	<!--使用动态sql，if标签-->
	<select id="queryUserByIf" resultType="user" parameterType="user">
		select * from user where 1=1
		<if test="sex != 0">
			and  sex = #{sex}
		</if>
		<if test="username != null and username !=''">
			and username like '%${username}%'
		</if>
	</select>
	<!--修改动态sql的where条件,去掉where 1=1 -->
	<select id="queryUserByIf2" parameterType="user" resultType="user">
		select * from user
		<where>
			<if test="sex != 0 ">
				sex = #{sex}
			</if>
			<if test="username != null and username != ''">
				and username like '%${username}%'
			</if>
		</where>
	</select>

	<!--sql片段-->
	<!--根据条件查询用户-->
	<select id="queryUserByWhere1" parameterType="user" resultType="user">
		<!--使用include标签加载sql片段，refid是sql片段的id-->
		<!--如果要引用其他的mapper.xml文件的sql片段，需要在refid加上mapper.xml的namespace-->
		select <include refid="userFields" /> from user 
		<where>
			<if test="username != null and username != ''">
				username like '%${username}%'
			</if>
		</where>
	</select>
	<sql id="userFields">
		<!--可逐个字段填写-->
		*
	</sql>

	<!--foreach 标签-->
	<!--根据多个id查询用户-->
	<select id="queryUserByIds" parameterType="queryVo2" resultType="user">
		select * from user
		<where>
			<!--
				foreach标签，进行遍历
				collection ： 遍历集合，遍历queryVo2的ids
				item ： 遍历的项目
				open  在前面添加的sql片段
				close 在结尾处添加的sql片段
				separator  指定的遍历元素之间的使用的分隔符
			-->
			<foreach collection="ids" item="item" open="id in (" close=")" separator=",">
				#{item}
			</foreach>
		</where>
	</select>
</mapper>